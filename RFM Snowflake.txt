CREATE OR replace DATABASE PROJECT_RFM;
USE DATABASE PROJECT_RFM;
CREATE OR replace SCHEMA RFM;
USE SCHEMA RFM;

CREATE OR replace TABLE RFM_ANALYSIS(
    CustomerID Number (30),
    PurchaseDate VARCHAR (30),
    TransactionAmount number(20),
    ProductInformation varchar (30),
    OrderID number(15),
    Location varchar(10)
    );


create or replace file format csv_format
    type = 'csv' 
    compression = 'none' 
    field_delimiter = ','
    field_optionally_enclosed_by = '\042'
    skip_header = 1;




select * from rfm_analysis limit 5;



SELECT 
    MAX(TO_DATE(PURCHASEDATE, 'DD/MM/YYYY')) AS LATESTDATE 
from RFM_ANALYSIS;

SELECT 
    MIN(TO_DATE(PURCHASEDATE, 'DD/MM/YYYY')) AS EARLIESTDATE 
from RFM_ANALYSIS;

SELECT 
    datediff('DAY', MIN(TO_DATE(PURCHASEDATE, 'DD/MM/YYYY')), MAX(TO_DATE(PURCHASEDATE, 'DD/MM/YYYY'))) AS DAY_DIFFERENCE 
FROM RFM_ANALYSIS;---60



create view rfm_segment as
WITH CTE1 AS
    (SELECT 
        CUSTOMERID,
        ROUND(sum(TRANSACTIONAMOUNT),0) AS MONETARY_VALUE,
        ROUND(avg(TRANSACTIONAMOUNT),0) AS AVERAGE_MONETARY_VALUE,
        COUNT(DISTINCT ORDERID) AS FREQUENCY,
        MAX(TO_DATE(PURCHASEDATE, 'DD/MM/YYYY')) AS FIRST_ORDER_DATE,
        (SELECT MAX(TO_DATE(PURCHASEDATE, 'DD/MM/YYYY')) FROM RFM_ANALYSIS) AS LATEST_ORDER_DATE,
        DATEDIFF('DAY', max(TO_DATE(PURCHASEDATE, 'DD/MM/YYYY')), (select max(TO_DATE(PURCHASEDATE, 'DD/MM/YYYY')) from RFM_ANALYSIS)) AS Recency
FROM RFM_ANALYSIS
GROUP BY CUSTOMERID),
CTE2 as
        (SELECT *,
        NTILE(4) OVER (ORDER BY RECENCY DESC) AS RFM_RECENCY,
        NTILE(4) OVER (ORDER BY FREQUENCY ASC) AS RFM_FREQUENCY,
        NTILE(4) OVER (ORDER BY MONETARY_VALUE ASC) AS RFM_MONETARY
        FROM CTE1)

SELECT *,
    (RFM_RECENCY+RFM_FREQUENCY+RFM_MONETARY) AS RFM_TOTAL_SCORE,
    concat(CAST(RFM_RECENCY AS VARCHAR),CAST(RFM_FREQUENCY AS VARCHAR),CAST(RFM_MONETARY AS VARCHAR)) AS RFM_SCORE_CATEGORY
FROM CTE2;



SELECT * FROM RFM_SEGMENT; ---LETS CHECK OUR VIES WORKS OR NOT
        
SELECT 
    DISTINCT RFM_SCORE_CATEGORY
FROM RFM_SEGMENT
ORDER BY 1; ---LETS CHECK HOW MANY UNIQUE CATEGORY DO WE HAVE (41)

SELECT * FROM RFM_SEGMENT
WHERE RFM_SCORE_CATEGORY='113'; ---LETS CHECK A SPECEFIC CATEGORY FINDINGS


SELECT
    CUSTOMERID, 
    RFM_RECENCY,
    RFM_FREQUENCY,
    RFM_MONETARY,
CASE 
    WHEN RFM_SCORE_CATEGORY IN (111, 112, 121, 122, 123, 132, 211, 212, 114, 141) THEN 'Lost Customers'
    WHEN RFM_SCORE_CATEGORY IN (133, 134, 143, 244, 334, 343, 344, 144) then 'slipping away, cannot lose'
    WHEN RFM_SCORE_CATEGORY IN (311, 411, 331) then 'new customers'
    WHEN RFM_SCORE_CATEGORY IN (222, 231, 221,  223, 233, 322) then 'potential churners'
    WHEN RFM_SCORE_CATEGORY IN (323, 333,321, 341, 422, 332, 432) then 'active'
    WHEN  RFM_SCORE_CATEGORY IN (433, 434, 443, 444) then 'loyal'
    ELSE 'OTHER'
END AS CUSTOMER_SEGMENT
FROM RFM_SEGMENT;